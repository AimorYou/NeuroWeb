import base64
import json
import os
import io

from PIL import Image
from ultralytics import YOLO


yolo_model = YOLO(os.path.join(os.path.dirname(__file__), "../resources/yolov8n.pt"))
yolo_mapping = [("человек", (67, 161, 255)), ("велосипед", (19, 222, 24)), ("автомобиль", (186, 55, 2)),
                ("мотоцикл", (167, 146, 11)), ("самолёт", (190, 76, 98)), ("автобус", (130, 172, 179)),
                ("поезд", (115, 209, 128)), ("грузовик", (204, 79, 135)), ("лодка", (136, 126, 185)),
                ("светофор", (209, 213, 45)), ("пожарный гидрант", (44, 52, 10)), ("знак остановки", (101, 158, 121)),
                ("парковочный счетчик", (179, 124, 12)), ("скамейка", (25, 33, 189)), ("птица", (45, 115, 11)),
                ("кошка", (73, 197, 184)), ("собака", (62, 225, 221)), ("лошадь", (32, 46, 52)), ("овца", (20, 165, 16)),
                ("корова", (54, 15, 57)), ("слон", (12, 150, 9)), ("медведь", (10, 46, 99)), ("зебра", (94, 89, 46)),
                ("жираф", (48, 37, 106)), ("рюкзак", (42, 10, 96)), ("зонт", (7, 164, 128)),
                ("саквояж", (98, 213, 120)), ("галстук", (40, 5, 219)), ("чемодан", (54, 25, 150)),
                ("фрисби", (251, 74, 172)), ("лыжи", (0, 236, 196)), ("сноуборд", (21, 104, 190)),
                ("спортивный мяч", (226, 74, 232)), ("воздушный змей", (120, 67, 25)), ("бейсбольная бита", (191, 106, 197)),
                ("бейсбольная перчатка", (8, 15, 134)), ("скейтборд", (21, 2, 1)), ("доска для серфинга", (142, 63, 109)),
                ("теннисная ракетка", (133, 148, 146)), ("бутылка", (187, 77, 253)), ("бокал для вина", (155, 22, 122)),
                ("чашка", (218, 130, 77)), ("вилка", (164, 102, 79)), ("нож", (43, 152, 125)),
                ("ложка", (185, 124, 151)), ("миска", (95, 159, 238)), ("банан", (128, 89, 85)),
                ("яблоко", (228, 6, 60)), ("сэндвич", (6, 41, 210)), ("апельсин", (11, 1, 133)),
                ("брокколи", (30, 96, 58)), ("морковь", (230, 136, 109)), ("хот-дог", (126, 45, 174)),
                ("пицца", (164, 63, 165)), ("пончик", (32, 111, 29)), ("торт", (232, 40, 70)), ("стул", (55, 31, 198)),
                ("диван", (148, 211, 129)), ("комнатное растение", (10, 186, 211)), ("кровать", (181, 201, 94)),
                ("обеденный стол", (55, 35, 92)), ("туалет", (129, 140, 233)), ("телевизор", (70, 250, 116)),
                ("ноутбук", (61, 209, 152)), ("мышь", (216, 21, 138)), ("пульт", (100, 0, 176)),
                ("клавиатура", (3, 42, 70)), ("сотовый телефон", (151, 13, 44)), ("микроволновка", (216, 102, 88)),
                ("духовка", (125, 216, 93)), ("тостер", (171, 236, 47)), ("раковина", (253, 127, 103)),
                ("холодильник", (205, 137, 244)), ("книга", (193, 137, 224)), ("часы", (36, 152, 214)),
                ("ваза", (17, 50, 238)), ("ножницы", (154, 165, 67)), ("плюшевый мишка", (114, 129, 60)),
                ("фен", (119, 24, 48)), ("зубная щетка", (73, 8, 110))]


def get_bbox_prediction(image_b64, debug=False):
    image = Image.open(io.BytesIO(base64.b64decode(image_b64)))
    yolo_results = yolo_model.predict(image, verbose=debug)
    structured_result = {}

    boxes_info = yolo_results[0].boxes
    for idx, cls_prediction in enumerate(boxes_info.cls):
        bbox_info = {
            "cls": yolo_mapping[int(cls_prediction.item())][0],
            "conf": round(boxes_info.conf[idx].item(), 2),
            "coordinates": boxes_info.xyxy[idx].tolist(),
            "color": yolo_mapping[int(cls_prediction.item())][1]
        }
        structured_result[idx] = bbox_info

    return structured_result


if __name__ == "__main__":
    with open(os.path.join(os.path.dirname(__file__), "imageToSave.jpg"), "rb") as f:
        raw_img = f.read()
    img_b64 = base64.b64encode(raw_img)

    results = get_bbox_prediction(img_b64, debug=True)
    print(json.dumps(results, indent=4))
